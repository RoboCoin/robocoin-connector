extends layout
include includes/mixins

block nav
    li.active
        a(href="#") Transactions
    li
        a(href="/account-info") Account info
    li
        a(href="/buy-and-sell") Buy and Sell
    li
        a(href="/configuration") Configuration
    li
        a(href="/logout") Logout

block content
    fieldset
        legend View a transaction hash
        .form-group
            label(for="robocoinTxId") Robocoin Transaction ID
            input(type="text").form-control#robocoinTxId
        button.btn.btn-default#transactionHashButton Submit
    table.table#transactionHashTable.hidden
        tr
            th Status
            td#transactionStatus --
        tr
            th Hash
            td#transactionHash --
    +kioskSelector(kiosks)
    h1 Unprocessed Transactions
    div.table-responsive
        table.table.table-striped.table-condensed.table-bordered#unprocessedTransactions
            tr
                th Transaction ID
                th Action
                th Fiat
                th XBT
                th Robocoin Fee
                th Robocoin Miner's Fee
                th Time
                th Manual transaction
    input(type="hidden" value="#{csrfToken}")#_csrf
    button#processButton.btn.btn-default Process

    h1 Processed Transactions
    div.table-responsive
        table.table.table-striped.table-condensed.table-bordered#processedTransactions
            tr
                th RC TX ID
                th Exchange TX ID
                th RC TX Type
                th RC Fiat
                th Exchange Fiat
                th RC XBT
                th Exchange XBT
                th RC TX Fee
                th Exchange TX Fee
                th RC Miner's Fee
                th Exchange Miner's Fee
                th RC TX Time
                th Exchange TX Time

    h1 Exchange Transactions
    div.table-responsive
        table.table.table-striped.table-condensed.table-bordered#exchangeTransactions
            tr
                th Order ID
                th Type
                th Fiat
                th XBT
                th Transaction Fee
                th Time

block footerJs
    script.
        $(document).ready(function () {

            var getExchangeLatestTransactions = function () {

                $.ajax({
                    url: '/exchange/latest-transactions',
                    data: {
                        kioskId: $('#kioskSelector').val()
                    },
                    success: function (data) {

                        var rows = '';
                        var row;
                        var rowClass;
                        var btcAsFloat;

                        for (var i = 0; i < data.length; i++) {

                            row = data[i];
                            btcAsFloat = parseFloat(row.btc);

                            if (btcAsFloat < 0) {
                                rowClass = 'send';
                            } else if (btcAsFloat > 0) {
                                rowClass = 'receive';
                            }

                            rows += '<tr class="transactionRow ' + rowClass + '">';
                            rows += '<td>' + (row.order_id ? row.order_id : '') + '</td>';
                            rows += '<td>' + row.type + '</td>';
                            rows += '<td>' + (row.fiat ?  row.fiat : '') + '</td>';
                            rows += '<td>' + row.xbt + '</td>';
                            rows += '<td>' + row.fee + '</td>';
                            rows += '<td>' + (new Date(row.datetime).toUTCString()) + '</td>';
                            rows += '</tr>';
                        }

                        var $table = $('#exchangeTransactions');
                        $table.find('tr.transactionRow').remove();
                        $table.append(rows);
                    },
                    dataType: 'json'
                });
            };
            getExchangeLatestTransactions();

            var writeRobocoinTable = function (data, tableId, includeCheckbox) {

                var transaction;
                var rows = [];
                var $row;

                for (var i = 0; i < data.length; i++) {

                    transaction = data[i];

                    $row = $('<tr data-tx-id="' + transaction.id + '"></tr>')
                        .addClass(transaction.action)
                        .addClass('transactionRow')
                        .append('<td>' + transaction.id + '</td>')
                        .append('<td>' + transaction.action + '</td>')
                        .append('<td>' + (transaction.fiat ? transaction.fiat : '') + '</td>')
                        .append('<td>' + transaction.xbt + '</td>')
                        .append('<td>' + (transaction.fee ? transaction.fee : '') + '</td>')
                        .append('<td>' + (transaction.miners_fee ? transaction.miners_fee : '') + '</td>')
                        .append('<td>' + (new Date(transaction.time)).toUTCString() + '</td>');

                        if (includeCheckbox) {
                            $row.append('<td><input type="checkbox" data-transaction-id="' + transaction.id + '"></td>');
                        }
                    rows.push($row);
                }

                var $table = $('#' + tableId);
                $table.find('.transactionRow').remove();
                $table.append(rows);
            };

            var getUnprocessedTransactions = function () {

                $.ajax({
                    url: '/robocoin/unprocessed-transactions',
                    data: {
                        kioskId: $('#kioskSelector').val()
                    },
                    dataType: 'json',
                    success: function (data) {
                        writeRobocoinTable(data, 'unprocessedTransactions', true);
                    }
                });
            };
            getUnprocessedTransactions();

            var getProcessedTransactions = function () {

                $.ajax({
                    url: '/robocoin/processed-transactions',
                    data: {
                        kioskId: $('#kioskSelector').val()
                    },
                    dataType: 'json',
                    success: function (data) {

                        var transaction;
                        var rows = [];
                        var $row;

                        for (var i = 0; i < data.length; i++) {

                            transaction = data[i];

                            $row = $('<tr class="transactionRow"></tr>')
                                .addClass(transaction.action)
                                .append('<td>' + transaction.robocoin_tx_id + '</td>')
                                .append('<td>' + transaction.exchange_tx_id + '</td>')
                                .append('<td>' + transaction.robocoin_tx_type + '</td>')
                                .append('<td>' + transaction.robocoin_fiat + '</td>')
                                .append('<td>' + transaction.exchange_fiat + '</td>')
                                .append('<td>' + transaction.robocoin_xbt + '</td>')
                                .append('<td>' + transaction.exchange_xbt + '</td>')
                                .append('<td>' + transaction.robocoin_tx_fee + '</td>')
                                .append('<td>' + transaction.exchange_tx_fee + '</td>')
                                .append('<td>' + (transaction.exchange_miners_fee || 0) + '</td>')
                                .append('<td>' + (new Date(transaction.robocoin_tx_time)).toUTCString() + '</td>')
                                .append('<td>' + (new Date(transaction.exchange_tx_time)).toUTCString() + '</td>');
                            rows.push($row);
                        }

                        var $table = $('#processedTransactions');
                        $table.find('tr.transactionRow').remove();
                        $table.append(rows);
                    }
                });
            };
            getProcessedTransactions();

            $('.transaction-filter button').on('click', function (event) {

                event.preventDefault();
                $('#robocoinTransactions').removeClass('hidden');

                $.ajax({
                    url: '/robocoin/transactions',
                    dataType: 'json',
                    data: {
                     sinceDate: $('#sinceDate').val()
                    },
                    type: 'POST',
                    success: function (data) {
                        writeRobocoinTable(data, 'robocoinTransactions');
                    }
                });
            });

            $('#processButton').on('click', function () {

                var $button = $(this);
                var ordersToProcess = [];
                var checkedBoxes = $('#unprocessedTransactions input:checked');
                var checkedBox;
                for (var i = 0; i < checkedBoxes.length; i++) {

                    ordersToProcess.push(checkedBoxes.eq(i).data('transaction-id'));
                }

                $.ajax({
                    url: '/batch-process',
                    data: {
                        orders: ordersToProcess.join(','),
                        _csrf: $('#_csrf').val()
                    },
                    type: 'POST',
                    success: function (data) {

                        $('.alert').remove();
                        $button.after('<div class="alert alert-success">' + data.message + '</td>');
                        var $unprocessedTransactionsTable = $('#unprocessedTransactions');
                        for (var i = 0; i < data.transactions.length; i++) {
                            $unprocessedTransactionsTable.find('tr[data-tx-id="' + data.transactions[i] + '"]').remove();
                        }
                    },
                    error: function (data) {

                        $('.alert').remove();
                        $button.after('<div class="alert alert-danger">' + data.statusText+ '</div>');
                    }
                });
            });

            $('#kioskSelector').on('change', function () {

                getExchangeLatestTransactions();
                getUnprocessedTransactions();
                getProcessedTransactions();
            });

            $('#transactionHashButton').on('click', function () {

                var $transactionHashTable = $('#transactionHashTable');
                $transactionHashTable.removeClass('hidden').addClass('show');
                var $button = $(this);

                $.ajax({
                    url: '/robocoin/transaction-hash',
                    data: {
                        robocoinTxId: $('#robocoinTxId').val(),
                        _csrf: $('#_csrf').val()
                    },
                    type: 'GET',
                    success: function (data) {

                        $('.alert').remove();
                        $('#transactionStatus').html(data.status);
                        $('#transactionHash').html(data.hash);
                    },
                    error: function (data) {

                        $('.alert').remove();
                        $button.after('<div class="alert alert-danger">' + (data.responseText || 'Error!') + '</div>');
                    }
                });
            });
        });
