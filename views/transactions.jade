extends layout

block nav
    li.active
        a(href="#") Transactions
    li
        a(href="/account-info") Account info
    li
        a(href="/buy-and-sell") Buy and Sell

block content
    h1 Robocoin Transactions
    form(role="form" action="#").form-inline.transaction-filter
        button.btn.btn-default Since Date
        .form-group
            input(type="date").form-control#sinceDate
    table.table.table-striped.table-condensed.table-bordered.hidden#robocoinTransactions
        tr
            th Transaction ID
            th Action
            th Fiat
            th XBT
            th Robocoin Fee
            th Robocoin Miner's Fee
            th Confirmations
            th Time
    h1 Unprocessed Transactions
    table.table.table-striped.table-condensed.table-bordered#unprocessedTransactions
        tr
            th Transaction ID
            th Action
            th Fiat
            th XBT
            th Robocoin Fee
            th Robocoin Miner's Fee
            th Confirmations
            th Time
            th Manual transaction
    button#processButton Process
    h1 Bitstamp Transactions
    table.table.table-striped.table-condensed.table-bordered#bitstampTransactions
        tr
            th Transaction ID
            th Order ID
            th Type
            th Fiat
            th XBT
            th Transaction Fee
            th Time

block footerJs
    script.
        $(document).ready(function () {

            $.get(
                '/exchange/latest-transactions',
                function (data) {

                    var rows = '';
                    var row;
                    var TYPES = ['deposit', 'withdrawal', 'market trade'];
                    var rowClass;
                    var btcAsFloat;

                    for (var i = 0; i < data.length; i++) {

                        row = data[i];
                        btcAsFloat = parseFloat(row.btc);

                        if (btcAsFloat < 0) {
                            rowClass = 'send';
                        } else if (btcAsFloat > 0) {
                            rowClass = 'receive';
                        }

                        rows += '<tr class="' + rowClass + '">';
                        rows += '<td>' + row.id + '</td>';
                        rows += '<td>' + (row.order_id ? row.order_id : '') + '</td>';
                        rows += '<td>' + TYPES[row.type] + '</td>';
                        rows += '<td>' + (row.usd ?  row.usd : '') + '</td>';
                        rows += '<td>' + row.btc + '</td>';
                        rows += '<td>' + row.fee + '</td>';
                        rows += '<td>' + (new Date(row.datetime).toUTCString()) + '</td>';
                        rows += '</tr>';
                    }

                    $('#bitstampTransactions').append(rows);
                },
                'json'
            );

            var writeRobocoinTable = function (data, tableId, includeCheckbox) {

                var transaction;
                var rows = [];
                var $row;

                for (var i = 0; i < data.length; i++) {

                    transaction = data[i];

                    $row = $('<tr data-tx-id="' + transaction.id + '"></tr>')
                        .addClass(transaction.action)
                        .addClass('transactionRow')
                        .append('<td>' + transaction.id + '</td>')
                        .append('<td>' + transaction.action + '</td>')
                        .append('<td>' + (transaction.fiat ? transaction.fiat : '') + '</td>')
                        .append('<td>' + transaction.xbt + '</td>')
                        .append('<td>' + (transaction.fee ? transaction.fee : '') + '</td>')
                        .append('<td>' + (transaction.minersFee ? transaction.minersFee : '') + '</td>')
                        .append('<td>' + (transaction.confirmations ? transaction.confirmations : '') + '</td>')
                        .append('<td>' + (new Date(transaction.time)).toUTCString() + '</td>');

                        if (includeCheckbox) {
                            $row.append('<td><input type="checkbox" data-transaction-id="' + transaction.id + '"></td>');
                        }
                    rows.push($row);
                }

                var $table = $('#' + tableId);
                $table.find('.transactionRow').remove();
                $table.append(rows);
            };

            $.ajax({
                url: '/robocoin/unprocessed-transactions',
                dataType: 'json',
                success: function (data) {
                    writeRobocoinTable(data, 'unprocessedTransactions', true);
                }
            });

            $('.transaction-filter button').on('click', function (event) {

                event.preventDefault();
                $('#robocoinTransactions').removeClass('hidden');

                $.ajax({
                    url: '/robocoin/transactions',
                    dataType: 'json',
                    data: {
                     sinceDate: $('#sinceDate').val()
                    },
                    type: 'POST',
                    success: function (data) {
                        writeRobocoinTable(data, 'robocoinTransactions');
                    }
                });
            });

            $('#processButton').on('click', function () {

                var $button = $(this);
                var ordersToProcess = [];
                var checkedBoxes = $('#unprocessedTransactions input:checked');
                var checkedBox;
                for (var i = 0; i < checkedBoxes.length; i++) {

                    ordersToProcess.push(checkedBoxes.eq(i).data('transaction-id'));
                }

                $.ajax({
                    url: '/batch-process',
                    data: {
                        orders: ordersToProcess.join(',')
                    },
                    type: 'POST',
                    success: function (data) {

                        $button.after('<div class="alert alert-success">' + data.message + '</td>');
                        var $unprocessedTransactionsTable = $('#unprocessedTransactions');
                        for (var i = 0; i < data.transactions.length; i++) {
                            $unprocessedTransactionsTable.find('tr[data-tx-id="' + data.transactions[i] + '"]').remove();
                        }
                    }
                });
            });
        });
