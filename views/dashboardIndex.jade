extends layout
include includes/mixins

block nav
    li
        a(href="/transactions") Transactions
    li
        a(href="/account-info") Account info
    li
        a(href="/configuration") Configuration
    li
        a(href="/logout") Logout

block content
    +kioskSelector(kiosks)
    div(style="width: 100%; height: 500px")#buyProfit
    div(style="width: 100%; height: 500px")#sellProfit
    div(style="width: 100%, height: 500px")#hourlyCash
    div(style="width: 100%, height: 500px")#dailyCash
    div(style="width: 100%, height: 500px")#monthlyCash

block footerJs
    script(src="https://www.google.com/jsapi")
    script.
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawCharts);
        function drawCharts () {

            var buyProfitChart = new google.visualization.LineChart(document.getElementById('buyProfit'));
            var sellProfitChart = new google.visualization.LineChart(document.getElementById('sellProfit'));
            var dailyCashChart = new google.visualization.LineChart(document.getElementById('dailyCash'));
            var hourlyCashChart = new google.visualization.LineChart(document.getElementById('hourlyCash'));
            var monthlyCashChart = new google.visualization.LineChart(document.getElementById('monthlyCash'));

            var _fetchChartData = function () {

                var jsonData = $.ajax({
                    url: '/dashboard/summary',
                    data: {
                        kioskId: $('#kioskSelector').val()
                    },
                    dataType: 'json',
                    async: false,
                    success: function (data) {

                        var buyProfit = data.profit.buys;
                        buyProfit.unshift(['Date', 'Fee Revenue', 'Romit Fee', 'Exchange Fee']);
                        var buyProfitData = google.visualization.arrayToDataTable(buyProfit);
                        buyProfitChart.draw(buyProfitData, {
                            title: 'Buy Profit',
                            curveType: 'function',
                            vAxis: { title: '#{ kioskCurrency }' },
                            hAxis: { title: 'Month' },
                            animation: {
                                duration: 1000
                            }
                        });

                        var sellProfit = data.profit.sells;
                        sellProfit.unshift(['Date', 'Fee Revenue', 'Romit Fee', 'Exchange Fee']);
                        var sellProfitData = google.visualization.arrayToDataTable(sellProfit);
                        sellProfitChart.draw(sellProfitData, {
                            title: 'Sell Profit',
                            curveType: 'function',
                            vAxis: { title: '#{ kioskCurrency }' },
                            hAxis: { title: 'Month' },
                            animation: {
                                duration: 1000
                            }
                        });

                        var dailyCash = data.cashFlow.daily;
                        dailyCash.unshift(['Day', 'Cash In', 'Cash Out']);
                        var dailyCashData = google.visualization.arrayToDataTable(dailyCash);
                        dailyCashChart.draw(dailyCashData, {
                            title: 'Daily Cash In/Out',
                            vAxis: { title: '#{ kioskCurrency }' },
                            hAxis: { title: 'Day' },
                            animation: {
                                duration: 1000
                            }
                        });

                        var hourlyCash = data.cashFlow.hourly;
                        hourlyCash.unshift(['Hour', 'Cash In', 'Cash Out']);
                        var hourlyCashData = google.visualization.arrayToDataTable(hourlyCash);
                        hourlyCashChart.draw(hourlyCashData, {
                            title: 'Hourly Cash In/Out',
                            vAxis: { title: '#{ kioskCurrency }' },
                            hAxis: { title: 'Hour' },
                            animation: {
                                duration: 1000
                            }
                        });

                        var monthlyCash = data.cashFlow.monthly;
                        monthlyCash.unshift(['Month', 'Cash In', 'Cash Out']);
                        var monthlyCashData = google.visualization.arrayToDataTable(monthlyCash);
                        monthlyCashChart.draw(monthlyCashData, {
                            title: 'Monthly Cash In/Out',
                            vAxis: { title: '#{ kioskCurrency }' },
                            hAxis: { title: 'Month' },
                            animation: {
                                duration: 1000
                            }
                        });
                    }
                });
            };

            _fetchChartData();
            setInterval(_fetchChartData, 60000);
        };

        $('#kioskSelector').on('change', function () {
            drawCharts();
        });