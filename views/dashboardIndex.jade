extends layout

block nav
    li
        a(href="/transactions") Transactions
    li
        a(href="/account-info") Account info
    li
        a(href="/buy-and-sell") Buy and Sell
    li
        a(href="/configuration") Configuration

block content
    div(style="width: 900px; height: 500px")#buyProfit
    div(style="width: 900px; height: 500px")#sellProfit
    div(style="width: 900px, height: 500px")#hourlyCash
    div(style="width: 900px, height: 500px")#dailyCash
    div(style="width: 900px, height: 500px")#monthlyCash

block footerJs
    script(src="https://www.google.com/jsapi")
    script.
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawCharts);
        function drawCharts () {

            var row;
            var hourlyCash;
            var dailyCash;
            var monthlyCash;
            var buyProfit;
            var sellProfit;

            var jsonData = $.ajax({
                url: '/dashboard/summary',
                dataType: 'json',
                async: false,
                success: function (data) {

                    hourlyCash = data.cashFlow.hourly;
                    hourlyCash.unshift(['Hour', 'Cash In', 'Cash Out']);
                    dailyCash = data.cashFlow.daily;
                    dailyCash.unshift(['Day', 'Cash In', 'Cash Out']);
                    monthlyCash = data.cashFlow.monthly;
                    monthlyCash.unshift(['Month', 'Cash In', 'Cash Out']);

                    buyProfit = data.profit.buys;
                    buyProfit.unshift(['Date', 'Revenue', 'Robocoin Fee', 'Exchange Fee', 'Miner\'s Fee']);
                    sellProfit = data.profit.sells;
                    sellProfit.unshift(['Date', 'Revenue', 'Robocoin Fee', 'Exchange Fee', 'Miner\'s Fee']);
                }
            });

            var buyProfitData = google.visualization.arrayToDataTable(buyProfit);
            var buyProfitChart = new google.visualization.LineChart(document.getElementById('buyProfit'));
            buyProfitChart.draw(buyProfitData, {
                title: 'Buy Profit',
                curveType: 'function',
                vAxis: { title: 'Fiat' },
                hAxis: { title: 'Month' }
            });

            var sellProfitData = google.visualization.arrayToDataTable(sellProfit);
            var sellProfitChart = new google.visualization.LineChart(document.getElementById('sellProfit'));
            sellProfitChart.draw(sellProfitData, {
                title: 'Sell Profit',
                curveType: 'function',
                vAxis: { title: 'Fiat' },
                hAxis: { title: 'Month' }
            });

            var dailyCashData = google.visualization.arrayToDataTable(dailyCash);
            var dailyCashChart = new google.visualization.AreaChart(document.getElementById('dailyCash'));
            dailyCashChart.draw(dailyCashData, {
                title: 'Daily Cash In/Out',
                isStacked: true,
                vAxis: { title: 'Fiat' },
                hAxis: { title: 'Day' }
            });

            var hourlyCashData = google.visualization.arrayToDataTable(hourlyCash);
            var hourlyCashChart = new google.visualization.AreaChart(document.getElementById('hourlyCash'));
            hourlyCashChart.draw(hourlyCashData, {
                title: 'Hourly Cash In/Out',
                isStacked: true,
                vAxis: { title: 'Fiat' },
                hAxis: { title: 'Hour' }
            });

            var monthlyCashData = google.visualization.arrayToDataTable(monthlyCash);
            var monthlyCashChart = new google.visualization.AreaChart(document.getElementById('monthlyCash'));
            monthlyCashChart.draw(monthlyCashData, {
                title: 'Monthly Cash In/Out',
                isStacked: true,
                vAxis: { title: 'Fiat' },
                hAxis: { title: 'Month' }
            });
        };